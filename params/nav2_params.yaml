amcl:
  ros__parameters:                               # AMCL 파라미터 루트
    alpha1: 0.05                                 # 회전 → 회전 노이즈 계수
    alpha2: 0.05                                 # 직선 → 회전 노이즈 계수
    alpha3: 0.05                                 # 직선 → 직선 노이즈 계수
    alpha4: 0.05                                 # 회전 → 직선 노이즈 계수
    alpha5: 0.05                                 # 추가 노이즈(ROS2 AMCL 확장)

    base_frame_id: "base_link"                   # 로봇 바디 프레임
    odom_frame_id: "odom"                        # odom 프레임
    global_frame_id: "map"                       # 전역 맵 프레임

    laser_model_type: "likelihood_field"         # 레이저 모델(빠르고 안정적)
    scan_topic: "scan_stable"                    # 안정화된 스캔 토픽(저지터 입력)
    laser_min_range: 0.05                        # 스캔 최소 유효범위
    laser_max_range: 30.0                        # 스캔 최대 유효범위
    laser_likelihood_max_dist: 2.0               # likelihood field 거리 한계
    max_beams: 60                                # 빔 다운샘플 개수

    min_particles: 500                           # 파티클 최소
    max_particles: 2000                          # 파티클 최대
    pf_err: 0.05                                 # KLD 샘플링 오차 허용
    pf_z: 0.99                                   # KLD 신뢰도
    resample_interval: 1                         # 리샘플링 간격

    robot_model_type: "nav2_amcl::OmniMotionModel" # 로봇 운동 모델(4족/omni에 유리)

    update_min_d: 0.05                           # 위치 업데이트 최소 이동
    update_min_a: 0.05                           # 위치 업데이트 최소 회전

    do_beamskip: true                            # 빔 스킵 사용(동적/3D→2D에 유용)
    beam_skip_distance: 0.5                      # 스킵 기준 거리
    beam_skip_threshold: 0.3                     # 스킵 비율 임계
    beam_skip_error_threshold: 0.9               # 오류 임계

    lambda_short: 0.1                            # short reading 분포 λ
    sigma_hit: 0.2                               # 정규 히트 σ
    z_hit: 0.8                                   # 히트 가중
    z_short: 0.05                                # 쇼트 가중
    z_max: 0.05                                  # 최대범위 가중
    z_rand: 0.1                                  # 랜덤 가중

    tf_broadcast: true                           # map→odom TF 브로드캐스트
    transform_tolerance: 0.3                     # TF 허용 지연
    save_pose_rate: 0.5                          # 포즈 저장 주기(Hz)

    map_topic: "/map"                            # 맵 토픽
    first_map_only: true                         # 첫 맵만 사용(투영맵 고정 가정)
    use_sim_time: true                           # 시뮬 시간 사용

bt_navigator:
  ros__parameters:                               # BT 내비게이터
    global_frame: map                            # 전역 프레임
    robot_base_frame: base_link                  # 로봇 프레임
    odom_topic: /odom                            # odom 토픽

    bt_loop_duration: 10                         # BT 틱(ms) = 10ms(100Hz)

    default_server_timeout: 20                   # 액션 서버 기본 타임아웃(s)
    wait_for_service_timeout: 1000               # 서비스 대기 타임아웃(ms)
    action_server_result_timeout: 900.0          # 액션 결과 대기(s)

    navigators: ["navigate_to_pose", "navigate_through_poses"] # 내비게이터 목록
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"     # 단일 포즈 내비
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator" # 다중 포즈 내비

    default_nav_to_pose_bt_xml: "/home/robit/bt/navigate_to_pose_w_smoothing_and_replanning.xml"   # 커스텀 BT(XML) 경로(스무딩 포함)
    default_nav_through_poses_bt_xml: "/home/robit/bt/navigate_through_poses_w_smoothing_and_replanning.xml" # 커스텀 BT(XML) 경로

    error_code_names:                            # BT 실패 원인 리포트 키
      - compute_path_error_code                  # 경로 계산 에러
      - follow_path_error_code                   # 경로 추종 에러
      - smoothing_path_error_code                # 스무딩 에러

controller_server:
  ros__parameters:                               # 로컬 컨트롤러 서버
    controller_frequency: 20.0                   # 컨트롤 주기(Hz)
    min_x_velocity_threshold: 0.01               # x 미소속도 임계
    min_y_velocity_threshold: 0.0                # y 미소속도 임계(DiffDrive=0)
    min_theta_velocity_threshold: 0.01           # yaw 미소속도 임계
    failure_tolerance: 0.3                       # 실패 허용(회복 전)
    progress_checker_plugins: ["progress_checker"]     # 진행체커 플러그인 목록
    goal_checker_plugins: ["general_goal_checker"]     # 목표체커 플러그인 목록
    controller_plugins: ["FollowPath"]           # 컨트롤러 플러그인 ID

    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker" # 진행체커
      required_movement_radius: 0.2              # 최소 이동 반경
      movement_time_allowance: 10.0              # 정체 허용 시간(s)

    general_goal_checker:
      stateful: True                             # 상태 유지형 목표체커
      plugin: "nav2_controller::SimpleGoalChecker"     # 단순 목표체커
      xy_goal_tolerance: 0.25                    # 위치 허용 오차(m)
      yaw_goal_tolerance: 0.25                   # 각도 허용 오차(rad)

    FollowPath:
      plugin: "nav2_mppi_controller::MPPIController"   # MPPI 컨트롤러
      motion_model: "DiffDrive"                 # 차동구동 모델

      time_steps: 30                             # 예측 지평 스텝(=1.5s)
      model_dt: 0.05                             # 모델 타임스텝(s)
      batch_size: 1600                           # 샘플 개수(연산여력 보고 조정)
      temperature: 0.45                          # 탐색 온도(크면 탐색↑)
      iteration_count: 2                         # 반복 최적화 횟수(여력 없으면 1)
      prune_distance: 0.9                        # 경로 가지치기 거리(작을수록 경로 유지)
      transform_tolerance: 0.2                   # TF 허용 지연

      vx_max: 1.20                               # 선속 최대(m/s)
      vx_min: -0.50                              # 선속 최소(후진 허용)
      vy_max: 0.0                                # y속도 최대(DiffDrive=0)
      wz_max: 2.6                                # ★ 각속도 최대(rad/s)↑(턴-인 향상)

      vx_std: 0.30                               # 샘플 분산 vx(민첩/진동 트레이드오프)
      vy_std: 0.0                                # 샘플 분산 vy
      wz_std: 0.60                               # 샘플 분산 wz

      regenerate_noises: true                    # 매주기 노이즈 재생성
      visualize: true                            # RViz 시각화 ON

      AckermannConstraints:
        min_turning_r: 0.2                       # 참조만(디프드라이브엔 영향 적음)

      critics: [                                 # 평가 크리틱 목록
        "ConstraintCritic","CostCritic","GoalCritic",
        "GoalAngleCritic","PathAlignCritic","PathFollowCritic",
        "PathAngleCritic","PreferForwardCritic"
      ]

      CostCritic:
        enabled: true                            # 충돌/비용 기반 회피 크리틱
        cost_power: 1                            # 비용 승수
        cost_weight: 3.2                         # ★ 회피 가중(민첩 회피↑)
        critical_cost: 253.0                     # 치명 비용 임계
        consider_footprint: true                 # 풋프린트 고려
        collision_cost: 1000000.0                # 충돌시 큰 페널티
        near_goal_distance: 0.6                  # ★ 목표 근방 완충거리
        trajectory_point_step: 2                 # 평가 샘플 간격

      PathAlignCritic:
        enabled: true                            # 경로 정렬 크리틱
        cost_power: 1
        cost_weight: 4.0                         # ★ 정렬 가중 완화(민첩성↑)
        max_path_occupancy_ratio: 0.1            # 경로 혼잡 허용비
        trajectory_point_step: 4                 # 평가 간격
        threshold_to_consider: 0.5               # 활성 임계
        offset_from_furthest: 15                 # 평가 오프셋
        use_path_orientations: false             # 경로 오리엔테이션 무시

      PathFollowCritic:
        enabled: true                            # 경로 추종 크리틱
        cost_power: 1
        cost_weight: 5.0                         # 추종성 유지
        offset_from_furthest: 5                  # 평가 오프셋
        threshold_to_consider: 1.4               # 활성 임계

      GoalCritic:
        enabled: true                            # 목표 접근 크리틱
        cost_power: 1
        cost_weight: 5.0                         # 목표 도달 중요도
        threshold_to_consider: 1.2               # ★ 활성 임계 소폭 ↓

      GoalAngleCritic:
        enabled: true                            # 목표 자세 정렬 크리틱
        cost_power: 1
        cost_weight: 3.5                         # ★ 근접 회전 응답성↑
        threshold_to_consider: 0.5               # 활성 임계

      PathAngleCritic:
        enabled: true                            # 경로 각도 정렬 크리틱
        cost_power: 1
        cost_weight: 2.0                         # 각도 정렬 가중
        offset_from_furthest: 4                  # 평가 오프셋
        threshold_to_consider: 0.5               # 활성 임계
        max_angle_to_furthest: 1.0               # 최대 허용 각도
        mode: 0                                  # 모드(기본)

      PreferForwardCritic:
        enabled: true                            # 전진 선호 크리틱
        cost_power: 1
        cost_weight: 3.0                         # ★ 후진 패널티 소폭 완화
        threshold_to_consider: 0.5               # 활성 임계

local_costmap:
  local_costmap:
    ros__parameters:                             # 로컬 코스트맵(회피용)
      use_sim_time: true                         # 시뮬 시간
      global_frame: odom                         # 로컬 프레임은 odom 권장
      robot_base_frame: base_link                # 로봇 프레임
      transform_tolerance: 0.3                   # TF 허용 지연
      rolling_window: true                       # 롤링 윈도우 사용

      width: 12                                  # 맵 폭(m)
      height: 12                                 # 맵 높이(m)
      resolution: 0.05                           # 해상도(m/셀)
      footprint: "[[0.25, 0.15], [0.25, -0.15], [-0.25, -0.15], [-0.25, 0.15]]" # 풋프린트

      update_frequency: 10.0                     # 업데이트 주기(Hz)
      publish_frequency: 5.0                     # 발행 주기(Hz)
      always_send_full_costmap: true             # 전체 맵 발행

      plugins: [obstacle_layer, inflation_layer] # 사용 레이어들

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer" # 장애물 레이어
        enabled: true                            # 활성
        track_unknown_space: false               # unknown 미추적(로컬은 false 흔함)
        combination_method: 1                    # 비용 결합 방식
        footprint_clearing_enabled: true         # 풋프린트 자동 클리어
        min_obstacle_height: 0.0                 # 최소 장애물 높이
        max_obstacle_height: 1.5                 # 최대 장애물 높이 (lidar면 영향 미미)

        observation_sources: scan_stable         # 관측 소스 이름
        scan_stable:
          topic: /scan_stable                    # 라이다 토픽
          data_type: LaserScan                   # 데이터 타입
          marking: true                          # 마킹 활성
          clearing: true                         # 클리어링 활성

          obstacle_max_range: 12.0               # 관측 마킹 최대범위
          raytrace_max_range: 14.0               # 레이 트레이스 최대범위
          obstacle_min_range: 0.0                # 관측 최소범위
          raytrace_min_range: 0.0                # 레이 트레이스 최소범위

          min_obstacle_height: 0.0               # 높이 필터(Scan은 보통 무시)
          max_obstacle_height: 0.75              # ★ 근접 벽 하단 노이즈 컷

          expected_update_rate: 0.0              # 미지정 시 0.0(경고 억제)
          observation_persistence: 1.0           # 잔상 유지시간(s) (필요시 0.2~0.5로↓)
          inf_is_valid: true                     # inf 거리 허용
          sensor_frame: ""                       # 비우면 header.frame_id 사용(권장)

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer" # 인플레이션 레이어
        inflation_radius: 0.3                    # 인플레이트 반경(★ 필요시 0.5~0.6 권장)
        cost_scaling_factor: 2.5                 # 비용 스케일

global_costmap:
  global_costmap:
    ros__parameters:                             # 글로벌 코스트맵(경로계획용)
      use_sim_time: true                         # 시뮬 시간
      global_frame: map                          # 전역 프레임
      robot_base_frame: base_link                # 로봇 프레임
      transform_tolerance: 0.5                   # TF 허용 지연
      rolling_window: false                      # 고정 맵
      width: 120                                 # 맵 폭(m)
      height: 120                                # 맵 높이(m)
      resolution: 0.05                           # 해상도(m/셀)
      origin_x: -60.0                            # 원점 X
      origin_y: -60.0                            # 원점 Y
      update_frequency: 5.0                      # 업데이트(Hz)
      publish_frequency: 2.0                     # 발행(Hz)
      track_unknown_space: true                  # unknown 공간 추적
      always_send_full_costmap: False            # 전체 맵 비발행(대역 절약)
      plugins: [static_layer, global_clear_layer, inflation_layer] # 레이어 구성

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"   # 정적 맵 레이어
        map_topic: /map                          # 맵 토픽
        map_subscribe_transient_local: true      # latched 유사 구독
        subscribe_to_updates: true               # 맵 갱신 구독
        use_maximum: false                       # 비용 결합 최대값 사용 안함
        track_unknown_space: true                # unknown 트래킹
        lethal_cost_threshold: 100               # 치명 비용 임계
        unknown_cost_value: -1                   # unknown 값
        trinary_costmap: true                    # 3단계 코스트맵

      global_clear_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer" # 글로벌 클리어 레이어
        track_unknown_space: true                # unknown 트래킹
        combination_method: 1                    # 결합 방식
        max_obstacle_height: 1.5                 # 최대 장애물 높이
        observation_sources: scan_fast           # 관측 소스
        scan_fast:
          topic: /scan_fast                      # 빠른 스캔(클리어 전용)
          sensor_frame: velodyne                 # 센서 프레임
          data_type: LaserScan                   # 데이터 타입
          marking: false                         # 마킹 비활성(클리어 전용)
          clearing: true                         # 클리어 활성
          obstacle_range: 8.0                    # 마킹 범위(미사용)
          raytrace_range: 12.0                   # 레이 트레이스 범위
          observation_persistence: 0.2           # 잔상 짧게(클리어 과청소 방지)
          inf_is_valid: true                     # inf 허용

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer" # 글로벌 인플레이션
        inflation_radius: 0.3                    # 반경(목표 접근성 위해 작게)
        cost_scaling_factor: 2.5                 # 비용 스케일

planner_server:
  ros__parameters:                               # 전역 플래너 서버
    use_sim_time: true                           # 시뮬 시간
    expected_planner_frequency: 20.0             # 기대 플래너 주기(Hz)
    costmap_update_timeout: 1.0                  # 코스트맵 타임아웃(s)
    planner_plugins: ["GridBased"]               # 플래너 플러그인 ID

    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"  # Navfn 플래너
      tolerance: 1.2                             # ★ 목표 근접 허용(m) (추출 실패 방지)
      use_astar: true                            # ★ A* 사용(추출 안정성↑)
      allow_unknown: true                        # SLAM/미지공간 주행이면 true(정맵이면 false 권장)

smoother_server:
  ros__parameters:                               # 경로 스무더 서버
    use_sim_time: true                           # 시뮬 시간
    smoother_plugins: ["simple_smoother"]        # 스무더 플러그인 ID
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"    # 단순 스무더
      tolerance: 1.0e-10                         # 종료 기준
      max_its: 1000                              # 최대 반복 수
      do_refinement: True                        # 정련 단계 사용

behavior_server:
  ros__parameters:                               # 리커버리/행동 서버
    local_costmap_topic: local_costmap/costmap   # 로컬 코스트맵 토픽
    global_costmap_topic: global_costmap/costmap # 글로벌 코스트맵 토픽
    local_footprint_topic: local_costmap/published_footprint   # 로컬 풋프린트
    global_footprint_topic: global_costmap/published_footprint # 글로벌 풋프린트
    cycle_frequency: 10.0                        # 실행 주기(Hz)
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"] # 플러그인
    spin:
      plugin: "nav2_behaviors/Spin"              # 회전 행동
    backup:
      plugin: "nav2_behaviors/BackUp"            # 후진 행동
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"    # 헤딩 주행
    wait:
      plugin: "nav2_behaviors/Wait"              # 대기
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"    # 보조 텔레옵
    local_frame: odom                            # 로컬 프레임
    global_frame: map                            # 글로벌 프레임
    robot_base_frame: base_link                  # 로봇 프레임
    transform_tolerance: 0.1                     # TF 허용 지연
    simulate_ahead_time: 2.0                     # 시뮬 예측시간(s)
    max_rotational_vel: 1.0                      # 행동 회전속도 최대
    min_rotational_vel: 0.4                      # 행동 회전속도 최소
    rotational_acc_lim: 3.2                      # 행동 각가속 한계

waypoint_follower:
  ros__parameters:                               # 웨이포인트 팔로워
    loop_rate: 20                                # 루프 주기(Hz)
    stop_on_failure: false                       # 실패 시 정지 여부
    action_server_result_timeout: 900.0          # 결과 대기(s)
    waypoint_task_executor_plugin: "wait_at_waypoint" # 태스크 플러그인
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint" # 웨이포인트 대기
      enabled: True                              # 활성
      waypoint_pause_duration: 200               # 대기(ms)

velocity_smoother:
  ros__parameters:                               # 속도 스무더
    smoothing_frequency: 20.0                    # 스무딩 주기(Hz)
    scale_velocities: False                      # 스케일링 비활성
    feedback: "OPEN_LOOP"                        # 오픈 루프 모드
    max_velocity: [1.20, 0.0, 2.60]              # ★ x,y,yaw 최대(컨트롤러 wz_max=2.6과 일치)
    min_velocity: [-0.50, 0.0, -2.60]            # ★ 최소(대칭)
    max_accel:    [3.0, 0.0, 3.8]                # ★ 가속 한계(턴 응답성 개선)
    max_decel:    [-3.0, 0.0, -3.8]              # ★ 감속 한계(급정지 대응)
    odom_topic: "odom"                           # odom 토픽
    odom_duration: 0.1                           # odom 시간창(s)
    deadband_velocity: [0.0, 0.0, 0.0]           # 데드밴드
    velocity_timeout: 1.0                        # 속도 타임아웃(s)

collision_monitor:
  ros__parameters:                               # 충돌 모니터(최종 안전망)
    base_frame_id: "base_link"                   # 로봇 프레임
    odom_frame_id: "odom"                        # odom 프레임
    cmd_vel_in_topic: "cmd_vel_smoothed"         # 입력 속도(스무딩 후)
    cmd_vel_out_topic: "cmd_vel"                 # 출력 속도(최종)
    state_topic: "collision_monitor_state"       # 상태 토픽
    transform_tolerance: 0.2                     # TF 허용 지연
    source_timeout: 1.0                          # 센서 소스 타임아웃(s)
    base_shift_correction: True                  # 베이스 쉬프트 보정
    stop_pub_timeout: 2.0                        # 정지 유지시간(s)

    polygons: ["FootprintApproach"]              # 사용 폴리곤 목록(접근 제동)

    FootprintApproach:
      type: "polygon"                            # 다각형(로봇 풋프린트 사용)
      action_type: "approach"                    # 접근 제동(감속/정지)
      footprint_topic: "/local_costmap/published_footprint" # 풋프린트 토픽
      time_before_collision: 1.2                 # 충돌 예측 시간(s)
      simulation_time_step: 0.1                  # 시뮬 스텝(s)
      min_points: 6                              # 최소 점 수
      visualize: False                           # 시각화
      enabled: True                              # 활성

    observation_sources: ["scan_stable"]         # ★ 관측 소스(로컬과 일치시키기 권장)
    scan_stable:
      type: "scan"                               # 데이터 타입
      topic: "scan_stable"                       # ★ 일관된 스캔 토픽 사용
      min_height: 0.0                            # 최소 높이(Scan은 무시됨)
      max_height: 2.0                            # 최대 높이(Scan은 무시됨)
      enabled: True                              # 활성

    # --- (옵션) 추가 안전 존: 필요 시 주석 해제 ---
    # polygons: ["StopZone","SlowZone","FootprintApproach"] # ★ 강한 안전망 구성
    # StopZone:
    #   type: "circle"                           # 원형 정지 존
    #   action_type: "stop"                      # 즉시 정지
    #   center_x: 0.0
    #   center_y: 0.0
    #   radius: 0.45                             # 로봇 반경 + 여유
    #   time_before_collision: 0.8               # 충돌 예측 시간
    #   min_points: 1
    #   enabled: True
    # SlowZone:
    #   type: "circle"                           # 원형 감속 존
    #   action_type: "limit"                     # 속도 제한
    #   center_x: 0.0
    #   center_y: 0.0
    #   radius: 0.9                              # StopZone보다 넓게
    #   max_linear_vel: 0.30                     # 선속 제한
    #   max_angular_vel: 1.0                     # 각속 제한
    #   enabled: True

docking_server:
  ros__parameters:                               # 도킹 서버
    controller_frequency: 50.0                   # 제어 주기(Hz)
    initial_perception_timeout: 5.0              # 초기 인식 타임아웃(s)
    wait_charge_timeout: 5.0                     # 충전 대기 타임아웃(s)
    dock_approach_timeout: 30.0                  # 접근 타임아웃(s)
    undock_linear_tolerance: 0.05                # 언도킹 선형 허용
    undock_angular_tolerance: 0.1                # 언도킹 각도 허용
    max_retries: 3                               # 최대 재시도
    base_frame: "base_link"                      # 로봇 프레임
    fixed_frame: "odom"                          # 기준 프레임
    dock_backwards: false                        # 후진 도킹 여부
    dock_prestaging_tolerance: 0.5               # 프리스테이징 허용

    dock_plugins: ['simple_charging_dock']       # 도킹 플러그인 목록
    simple_charging_dock:
      plugin: 'opennav_docking::SimpleChargingDock' # 단순 충전 도크
      docking_threshold: 0.05                    # 도킹 임계(m)
      staging_x_offset: -0.7                     # 스테이징 오프셋
      use_external_detection_pose: true          # 외부 감지 포즈 사용
      use_battery_status: false                  # 배터리 상태 연동
      use_stall_detection: false                 # 스톨 감지 사용

      external_detection_timeout: 1.0            # 외부 감지 타임아웃(s)
      external_detection_translation_x: -0.18    # 외부 감지 보정 x
      external_detection_translation_y: 0.0      # 외부 감지 보정 y
      external_detection_rotation_roll: -1.57    # 외부 감지 보정 roll
      external_detection_rotation_pitch: -1.57   # 외부 감지 보정 pitch
      external_detection_rotation_yaw: 0.0       # 외부 감지 보정 yaw
      filter_coef: 0.1                           # 필터 계수

    # docks: ['home_dock']                       # (예시) 도크 인스턴스 정의
    # home_dock:
    #   type: 'simple_charging_dock'             # 도크 타입
    #   frame: map                               # 도크 프레임
    #   pose: [0.0, 0.0, 0.0]                    # 도크 포즈(x,y,yaw)

    controller:
      k_phi: 3.0                                 # 도킹 제어 gain φ
      k_delta: 2.0                               # 도킹 제어 gain δ
      v_linear_min: 0.15                         # 선속 최소
      v_linear_max: 0.15                         # 선속 최대(저속 유지)

loopback_simulator:
  ros__parameters:                               # 루프백 시뮬레이터
    base_frame_id: "base_link"                   # 로봇 프레임
    odom_frame_id: "odom"                        # odom 프레임
    map_frame_id: "map"                          # 맵 프레임
    scan_frame_id: "base_scan"                   # 스캔 프레임(launch에서 remap)
    update_duration: 0.02                        # 업데이트 주기(s) (=50Hz)
